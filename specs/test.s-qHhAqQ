	.file	"specs.test"


	.text
	.align	16
	.globl	_D5specs4test12StringTester31creation_should_handle_literalsMFZE7testing5logic2it
	.type	_D5specs4test12StringTester31creation_should_handle_literalsMFZE7testing5logic2it,@function
_D5specs4test12StringTester31creation_should_handle_literalsMFZE7testing5logic2it:
.Leh_func_begin1:
.Llabel8:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*72(%rax)
.Llabel1:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel2:
.LBB1_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel3:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$10, %r8d
	leaq	.str33, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel4:
.LBB1_2:	# postinvoke14
	movq	(%rax), %rcx
	movq	248(%rcx), %rcx
.Llabel5:
	movl	$10, %esi
	leaq	.str33, %rdx
	movq	%rax, %rdi
	call	*%rcx
.Llabel6:
.LBB1_3:	# postinvoke21
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB1_4:	# landingpad
.Llabel7:
	cmpq	$1, %rdx
	jne	.LBB1_6	# switchdefault
.LBB1_5:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB1_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester31creation_should_handle_literalsMFZE7testing5logic2it, .-_D5specs4test12StringTester31creation_should_handle_literalsMFZE7testing5logic2it
.Leh_func_end1:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table1:
	.byte	0x0
	.byte	0x0
.Lexception1:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin1-.Leh_func_begin1
	.long	.Llabel1-.Leh_func_begin1
	.long	0x0
	.uleb128	0
	.long	.Llabel1-.Leh_func_begin1
	.long	.Llabel6-.Llabel1
	.long	.Llabel7-.Leh_func_begin1
	.uleb128	1
	.long	.Llabel6-.Leh_func_begin1
	.long	.Leh_func_end1-.Llabel6
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester31creation_should_handle_integersMFZE7testing5logic2it
	.type	_D5specs4test12StringTester31creation_should_handle_integersMFZE7testing5logic2it,@function
_D5specs4test12StringTester31creation_should_handle_integersMFZE7testing5logic2it:
.Leh_func_begin2:
.Llabel16:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*72(%rax)
.Llabel9:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel10:
.LBB2_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel11:
	movl	$123, %esi
	movq	%rax, %rdi
	call	_D4core6string6String5_ctorMFmZC4core6string6String
.Llabel12:
.LBB2_2:	# postinvoke12
	movq	(%rax), %rcx
	movq	248(%rcx), %rcx
.Llabel13:
	movl	$3, %esi
	leaq	.str35, %rdx
	movq	%rax, %rdi
	call	*%rcx
.Llabel14:
.LBB2_3:	# postinvoke19
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB2_4:	# landingpad
.Llabel15:
	cmpq	$1, %rdx
	jne	.LBB2_6	# switchdefault
.LBB2_5:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB2_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester31creation_should_handle_integersMFZE7testing5logic2it, .-_D5specs4test12StringTester31creation_should_handle_integersMFZE7testing5logic2it
.Leh_func_end2:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table2:
	.byte	0x0
	.byte	0x0
.Lexception2:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin2-.Leh_func_begin2
	.long	.Llabel9-.Leh_func_begin2
	.long	0x0
	.uleb128	0
	.long	.Llabel9-.Leh_func_begin2
	.long	.Llabel14-.Llabel9
	.long	.Llabel15-.Leh_func_begin2
	.uleb128	1
	.long	.Llabel14-.Leh_func_begin2
	.long	.Leh_func_end2-.Llabel14
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester33creation_should_handle_formattingMFZE7testing5logic2it
	.type	_D5specs4test12StringTester33creation_should_handle_formattingMFZE7testing5logic2it,@function
_D5specs4test12StringTester33creation_should_handle_formattingMFZE7testing5logic2it:
.Leh_func_begin3:
.Llabel24:
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*72(%rax)
.Llabel17:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel18:
.LBB3_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
	movl	$57005, (%rsp)
	movl	$1234, 8(%rsp)
.Llabel19:
	movl	$2, %esi
	leaq	._arguments.storage36, %rdx
	leaq	(%rsp), %rcx
	movl	$7, %r8d
	leaq	.str38, %r9
	movq	%rax, %rdi
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel20:
.LBB3_2:	# postinvoke18
	movq	(%rax), %rcx
	movq	248(%rcx), %rcx
.Llabel21:
	movl	$11, %esi
	leaq	.str39, %rdx
	movq	%rax, %rdi
	call	*%rcx
.Llabel22:
.LBB3_3:	# postinvoke25
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	jmp	.LBB3_6	# catch
.LBB3_4:	# landingpad
.Llabel23:
	cmpq	$1, %rdx
	jne	.LBB3_7	# switchdefault
.LBB3_5:	# catch
	movl	$1, %eax
.LBB3_6:	# catch
	addq	$16, %rsp
	popq	%rbx
	ret
.LBB3_7:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester33creation_should_handle_formattingMFZE7testing5logic2it, .-_D5specs4test12StringTester33creation_should_handle_formattingMFZE7testing5logic2it
.Leh_func_end3:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table3:
	.byte	0x0
	.byte	0x0
.Lexception3:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin3-.Leh_func_begin3
	.long	.Llabel17-.Leh_func_begin3
	.long	0x0
	.uleb128	0
	.long	.Llabel17-.Leh_func_begin3
	.long	.Llabel22-.Llabel17
	.long	.Llabel23-.Leh_func_begin3
	.uleb128	1
	.long	.Llabel22-.Leh_func_begin3
	.long	.Leh_func_end3-.Llabel22
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester37creation_should_handle_string_objectsMFZE7testing5logic2it
	.type	_D5specs4test12StringTester37creation_should_handle_string_objectsMFZE7testing5logic2it,@function
_D5specs4test12StringTester37creation_should_handle_string_objectsMFZE7testing5logic2it:
.Leh_func_begin4:
.Llabel36:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*72(%rax)
.Llabel25:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel26:
.LBB4_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel27:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$5, %r8d
	leaq	.str42, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel28:
	movq	%rax, %rbx
.LBB4_2:	# postinvoke14
.Llabel29:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel30:
.LBB4_3:	# postinvoke16
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel31:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	call	_D4core6string6String5_ctorMFC4core6string6StringZC4core6string6String
.Llabel32:
.LBB4_4:	# postinvoke26
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel33:
	movl	$5, %esi
	leaq	.str42, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel34:
.LBB4_5:	# postinvoke33
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB4_6:	# landingpad
.Llabel35:
	cmpq	$1, %rdx
	jne	.LBB4_8	# switchdefault
.LBB4_7:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB4_8:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester37creation_should_handle_string_objectsMFZE7testing5logic2it, .-_D5specs4test12StringTester37creation_should_handle_string_objectsMFZE7testing5logic2it
.Leh_func_end4:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table4:
	.byte	0x0
	.byte	0x0
.Lexception4:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin4-.Leh_func_begin4
	.long	.Llabel25-.Leh_func_begin4
	.long	0x0
	.uleb128	0
	.long	.Llabel25-.Leh_func_begin4
	.long	.Llabel34-.Llabel25
	.long	.Llabel35-.Leh_func_begin4
	.uleb128	1
	.long	.Llabel34-.Leh_func_begin4
	.long	.Leh_func_end4-.Llabel34
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester15before_creationMFZv
	.type	_D5specs4test12StringTester15before_creationMFZv,@function
_D5specs4test12StringTester15before_creationMFZv:
.Leh_func_begin5:
.Llabel37:
	subq	$8, %rsp
	call	_d_invariant
	addq	$8, %rsp
	ret
	.size	_D5specs4test12StringTester15before_creationMFZv, .-_D5specs4test12StringTester15before_creationMFZv
.Leh_func_end5:


	.align	16
	.globl	_D5specs4test12StringTester31trim_should_trim_off_whitespaceMFZE7testing5logic2it
	.type	_D5specs4test12StringTester31trim_should_trim_off_whitespaceMFZE7testing5logic2it,@function
_D5specs4test12StringTester31trim_should_trim_off_whitespaceMFZE7testing5logic2it:
.Leh_func_begin6:
.Llabel47:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*88(%rax)
.Llabel38:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel39:
.LBB6_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel40:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$15, %r8d
	leaq	.str46, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel41:
.LBB6_2:	# postinvoke14
	movq	(%rax), %rcx
	movq	96(%rcx), %rcx
.Llabel42:
	movq	%rax, %rdi
	call	*%rcx
.Llabel43:
.LBB6_3:	# postinvoke21
	movq	(%rax), %rcx
	movq	248(%rcx), %rcx
.Llabel44:
	movl	$3, %esi
	leaq	.str47, %rdx
	movq	%rax, %rdi
	call	*%rcx
.Llabel45:
.LBB6_4:	# postinvoke28
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB6_5:	# landingpad
.Llabel46:
	cmpq	$1, %rdx
	jne	.LBB6_7	# switchdefault
.LBB6_6:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB6_7:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester31trim_should_trim_off_whitespaceMFZE7testing5logic2it, .-_D5specs4test12StringTester31trim_should_trim_off_whitespaceMFZE7testing5logic2it
.Leh_func_end6:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table6:
	.byte	0x0
	.byte	0x0
.Lexception6:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin6-.Leh_func_begin6
	.long	.Llabel38-.Leh_func_begin6
	.long	0x0
	.uleb128	0
	.long	.Llabel38-.Leh_func_begin6
	.long	.Llabel45-.Llabel38
	.long	.Llabel46-.Leh_func_begin6
	.uleb128	1
	.long	.Llabel45-.Leh_func_begin6
	.long	.Leh_func_end6-.Llabel45
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester11before_trimMFZv
	.type	_D5specs4test12StringTester11before_trimMFZv,@function
_D5specs4test12StringTester11before_trimMFZv:
.Leh_func_begin7:
.Llabel48:
	subq	$8, %rsp
	call	_d_invariant
	addq	$8, %rsp
	ret
	.size	_D5specs4test12StringTester11before_trimMFZv, .-_D5specs4test12StringTester11before_trimMFZv
.Leh_func_end7:


	.align	16
	.globl	_D5specs4test12StringTester41length_should_account_for_combining_marksMFZE7testing5logic2it
	.type	_D5specs4test12StringTester41length_should_account_for_combining_marksMFZE7testing5logic2it,@function
_D5specs4test12StringTester41length_should_account_for_combining_marksMFZE7testing5logic2it:
.Leh_func_begin8:
.Llabel56:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*120(%rax)
.Llabel49:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel50:
.LBB8_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel51:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$12, %r8d
	leaq	.str7, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel52:
.LBB8_2:	# postinvoke14
	movq	(%rax), %rcx
	movq	40(%rcx), %rcx
.Llabel53:
	movq	%rax, %rdi
	call	*%rcx
.Llabel54:
.LBB8_3:	# postinvoke21
	cmpl	$10, %eax
	setne	%al
	movzbl	%al, %eax
	popq	%rbx
	ret
.LBB8_4:	# landingpad
.Llabel55:
	cmpq	$1, %rdx
	jne	.LBB8_6	# switchdefault
.LBB8_5:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB8_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester41length_should_account_for_combining_marksMFZE7testing5logic2it, .-_D5specs4test12StringTester41length_should_account_for_combining_marksMFZE7testing5logic2it
.Leh_func_end8:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table8:
	.byte	0x0
	.byte	0x0
.Lexception8:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin8-.Leh_func_begin8
	.long	.Llabel49-.Leh_func_begin8
	.long	0x0
	.uleb128	0
	.long	.Llabel49-.Leh_func_begin8
	.long	.Llabel54-.Llabel49
	.long	.Llabel55-.Leh_func_begin8
	.uleb128	1
	.long	.Llabel54-.Leh_func_begin8
	.long	.Leh_func_end8-.Llabel54
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester45length_should_return_the_number_of_charactersMFZE7testing5logic2it
	.type	_D5specs4test12StringTester45length_should_return_the_number_of_charactersMFZE7testing5logic2it,@function
_D5specs4test12StringTester45length_should_return_the_number_of_charactersMFZE7testing5logic2it:
.Leh_func_begin9:
.Llabel64:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*120(%rax)
.Llabel57:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel58:
.LBB9_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel59:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$11, %r8d
	leaq	.str53, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel60:
.LBB9_2:	# postinvoke14
	movq	(%rax), %rcx
	movq	40(%rcx), %rcx
.Llabel61:
	movq	%rax, %rdi
	call	*%rcx
.Llabel62:
.LBB9_3:	# postinvoke21
	cmpl	$11, %eax
	setne	%al
	movzbl	%al, %eax
	popq	%rbx
	ret
.LBB9_4:	# landingpad
.Llabel63:
	cmpq	$1, %rdx
	jne	.LBB9_6	# switchdefault
.LBB9_5:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB9_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester45length_should_return_the_number_of_charactersMFZE7testing5logic2it, .-_D5specs4test12StringTester45length_should_return_the_number_of_charactersMFZE7testing5logic2it
.Leh_func_end9:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table9:
	.byte	0x0
	.byte	0x0
.Lexception9:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin9-.Leh_func_begin9
	.long	.Llabel57-.Leh_func_begin9
	.long	0x0
	.uleb128	0
	.long	.Llabel57-.Leh_func_begin9
	.long	.Llabel62-.Llabel57
	.long	.Llabel63-.Leh_func_begin9
	.uleb128	1
	.long	.Llabel62-.Leh_func_begin9
	.long	.Leh_func_end9-.Llabel62
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester41length_should_not_fail_on_an_empty_stringMFZE7testing5logic2it
	.type	_D5specs4test12StringTester41length_should_not_fail_on_an_empty_stringMFZE7testing5logic2it,@function
_D5specs4test12StringTester41length_should_not_fail_on_an_empty_stringMFZE7testing5logic2it:
.Leh_func_begin10:
.Llabel72:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*120(%rax)
.Llabel65:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel66:
.LBB10_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel67:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	leaq	.str10, %r9
	movq	%rax, %rdi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel68:
.LBB10_2:	# postinvoke14
	movq	(%rax), %rcx
	movq	40(%rcx), %rcx
.Llabel69:
	movq	%rax, %rdi
	call	*%rcx
.Llabel70:
.LBB10_3:	# postinvoke21
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	popq	%rbx
	ret
.LBB10_4:	# landingpad
.Llabel71:
	cmpq	$1, %rdx
	jne	.LBB10_6	# switchdefault
.LBB10_5:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB10_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester41length_should_not_fail_on_an_empty_stringMFZE7testing5logic2it, .-_D5specs4test12StringTester41length_should_not_fail_on_an_empty_stringMFZE7testing5logic2it
.Leh_func_end10:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table10:
	.byte	0x0
	.byte	0x0
.Lexception10:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin10-.Leh_func_begin10
	.long	.Llabel65-.Leh_func_begin10
	.long	0x0
	.uleb128	0
	.long	.Llabel65-.Leh_func_begin10
	.long	.Llabel70-.Llabel65
	.long	.Llabel71-.Leh_func_begin10
	.uleb128	1
	.long	.Llabel70-.Leh_func_begin10
	.long	.Leh_func_end10-.Llabel70
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester13before_lengthMFZv
	.type	_D5specs4test12StringTester13before_lengthMFZv,@function
_D5specs4test12StringTester13before_lengthMFZv:
.Leh_func_begin11:
.Llabel73:
	subq	$8, %rsp
	call	_d_invariant
	addq	$8, %rsp
	ret
	.size	_D5specs4test12StringTester13before_lengthMFZv, .-_D5specs4test12StringTester13before_lengthMFZv
.Leh_func_end11:


	.align	16
	.globl	_D5specs4test12StringTester41append_should_concatenate_a_string_objectMFZE7testing5logic2it
	.type	_D5specs4test12StringTester41append_should_concatenate_a_string_objectMFZE7testing5logic2it,@function
_D5specs4test12StringTester41append_should_concatenate_a_string_objectMFZE7testing5logic2it:
.Leh_func_begin12:
.Llabel87:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel74:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel75:
.LBB12_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel76:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel77:
	movq	%rax, %rbx
.LBB12_2:	# postinvoke14
.Llabel78:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel79:
.LBB12_3:	# postinvoke16
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel80:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$5, %r8d
	leaq	.str62, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel81:
.LBB12_4:	# postinvoke28
	movq	(%rbx), %rcx
	movq	64(%rcx), %rcx
.Llabel82:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	call	*%rcx
.Llabel83:
.LBB12_5:	# postinvoke36
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel84:
	movl	$11, %esi
	leaq	.str53, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel85:
.LBB12_6:	# postinvoke42
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB12_7:	# landingpad
.Llabel86:
	cmpq	$1, %rdx
	jne	.LBB12_9	# switchdefault
.LBB12_8:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB12_9:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester41append_should_concatenate_a_string_objectMFZE7testing5logic2it, .-_D5specs4test12StringTester41append_should_concatenate_a_string_objectMFZE7testing5logic2it
.Leh_func_end12:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table12:
	.byte	0x0
	.byte	0x0
.Lexception12:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin12-.Leh_func_begin12
	.long	.Llabel74-.Leh_func_begin12
	.long	0x0
	.uleb128	0
	.long	.Llabel74-.Leh_func_begin12
	.long	.Llabel85-.Llabel74
	.long	.Llabel86-.Leh_func_begin12
	.uleb128	1
	.long	.Llabel85-.Leh_func_begin12
	.long	.Leh_func_end12-.Llabel85
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester42append_should_concatenate_a_string_literalMFZE7testing5logic2it
	.type	_D5specs4test12StringTester42append_should_concatenate_a_string_literalMFZE7testing5logic2it,@function
_D5specs4test12StringTester42append_should_concatenate_a_string_literalMFZE7testing5logic2it:
.Leh_func_begin13:
.Llabel97:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel88:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel89:
.LBB13_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel90:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel91:
	movq	%rax, %rbx
.LBB13_2:	# postinvoke14
	movq	(%rbx), %rax
	movq	72(%rax), %rax
.Llabel92:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$5, %r8d
	leaq	.str62, %r9
	movq	%rbx, %rdi
	movq	$0, %rcx
	call	*%rax
.Llabel93:
.LBB13_3:	# postinvoke24
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel94:
	movl	$11, %esi
	leaq	.str53, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel95:
.LBB13_4:	# postinvoke30
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB13_5:	# landingpad
.Llabel96:
	cmpq	$1, %rdx
	jne	.LBB13_7	# switchdefault
.LBB13_6:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB13_7:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester42append_should_concatenate_a_string_literalMFZE7testing5logic2it, .-_D5specs4test12StringTester42append_should_concatenate_a_string_literalMFZE7testing5logic2it
.Leh_func_end13:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table13:
	.byte	0x0
	.byte	0x0
.Lexception13:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin13-.Leh_func_begin13
	.long	.Llabel88-.Leh_func_begin13
	.long	0x0
	.uleb128	0
	.long	.Llabel88-.Leh_func_begin13
	.long	.Llabel95-.Llabel88
	.long	.Llabel96-.Leh_func_begin13
	.uleb128	1
	.long	.Llabel95-.Leh_func_begin13
	.long	.Leh_func_end13-.Llabel95
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester52append_should_concatenate_a_formatted_string_literalMFZE7testing5logic2it
	.type	_D5specs4test12StringTester52append_should_concatenate_a_formatted_string_literalMFZE7testing5logic2it,@function
_D5specs4test12StringTester52append_should_concatenate_a_formatted_string_literalMFZE7testing5logic2it:
.Leh_func_begin14:
.Llabel107:
	pushq	%rbx
	subq	$16, %rsp
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel98:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel99:
.LBB14_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel100:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel101:
	movq	%rax, %rbx
.LBB14_2:	# postinvoke14
	movq	(%rbx), %rax
	movq	72(%rax), %rax
	movl	$57005, (%rsp)
	movl	$1234, 8(%rsp)
.Llabel102:
	movl	$2, %esi
	leaq	._arguments.storage36, %rdx
	leaq	(%rsp), %rcx
	movl	$7, %r8d
	leaq	.str38, %r9
	movq	%rbx, %rdi
	call	*%rax
.Llabel103:
.LBB14_3:	# postinvoke28
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel104:
	movl	$17, %esi
	leaq	.str77, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel105:
.LBB14_4:	# postinvoke34
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	jmp	.LBB14_7	# catch
.LBB14_5:	# landingpad
.Llabel106:
	cmpq	$1, %rdx
	jne	.LBB14_8	# switchdefault
.LBB14_6:	# catch
	movl	$1, %eax
.LBB14_7:	# catch
	addq	$16, %rsp
	popq	%rbx
	ret
.LBB14_8:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester52append_should_concatenate_a_formatted_string_literalMFZE7testing5logic2it, .-_D5specs4test12StringTester52append_should_concatenate_a_formatted_string_literalMFZE7testing5logic2it
.Leh_func_end14:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table14:
	.byte	0x0
	.byte	0x0
.Lexception14:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin14-.Leh_func_begin14
	.long	.Llabel98-.Leh_func_begin14
	.long	0x0
	.uleb128	0
	.long	.Llabel98-.Leh_func_begin14
	.long	.Llabel105-.Llabel98
	.long	.Llabel106-.Leh_func_begin14
	.uleb128	1
	.long	.Llabel105-.Leh_func_begin14
	.long	.Leh_func_end14-.Llabel105
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester48append_should_not_fail_on_an_empty_string_objectMFZE7testing5logic2it
	.type	_D5specs4test12StringTester48append_should_not_fail_on_an_empty_string_objectMFZE7testing5logic2it,@function
_D5specs4test12StringTester48append_should_not_fail_on_an_empty_string_objectMFZE7testing5logic2it:
.Leh_func_begin15:
.Llabel121:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel108:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel109:
.LBB15_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel110:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel111:
	movq	%rax, %rbx
.LBB15_2:	# postinvoke14
.Llabel112:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel113:
.LBB15_3:	# postinvoke16
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel114:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	leaq	.str10, %r9
	movq	%rax, %rdi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel115:
.LBB15_4:	# postinvoke28
	movq	(%rbx), %rcx
	movq	64(%rcx), %rcx
.Llabel116:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	call	*%rcx
.Llabel117:
.LBB15_5:	# postinvoke36
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel118:
	movl	$6, %esi
	leaq	.str59, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel119:
.LBB15_6:	# postinvoke42
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB15_7:	# landingpad
.Llabel120:
	cmpq	$1, %rdx
	jne	.LBB15_9	# switchdefault
.LBB15_8:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB15_9:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester48append_should_not_fail_on_an_empty_string_objectMFZE7testing5logic2it, .-_D5specs4test12StringTester48append_should_not_fail_on_an_empty_string_objectMFZE7testing5logic2it
.Leh_func_end15:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table15:
	.byte	0x0
	.byte	0x0
.Lexception15:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin15-.Leh_func_begin15
	.long	.Llabel108-.Leh_func_begin15
	.long	0x0
	.uleb128	0
	.long	.Llabel108-.Leh_func_begin15
	.long	.Llabel119-.Llabel108
	.long	.Llabel120-.Leh_func_begin15
	.uleb128	1
	.long	.Llabel119-.Leh_func_begin15
	.long	.Leh_func_end15-.Llabel119
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester49append_should_not_fail_on_an_empty_string_literalMFZE7testing5logic2it
	.type	_D5specs4test12StringTester49append_should_not_fail_on_an_empty_string_literalMFZE7testing5logic2it,@function
_D5specs4test12StringTester49append_should_not_fail_on_an_empty_string_literalMFZE7testing5logic2it:
.Leh_func_begin16:
.Llabel131:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel122:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel123:
.LBB16_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel124:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel125:
	movq	%rax, %rbx
.LBB16_2:	# postinvoke14
	movq	(%rbx), %rax
	movq	72(%rax), %rax
.Llabel126:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	leaq	.str10, %r9
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	call	*%rax
.Llabel127:
.LBB16_3:	# postinvoke24
	movq	(%rbx), %rax
	movq	248(%rax), %rax
.Llabel128:
	movl	$6, %esi
	leaq	.str59, %rdx
	movq	%rbx, %rdi
	call	*%rax
.Llabel129:
.LBB16_4:	# postinvoke30
	# implicit-def: eax
	andl	$1, %eax
	xorl	$1, %eax
	popq	%rbx
	ret
.LBB16_5:	# landingpad
.Llabel130:
	cmpq	$1, %rdx
	jne	.LBB16_7	# switchdefault
.LBB16_6:	# catch
	movl	$1, %eax
	popq	%rbx
	ret
.LBB16_7:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester49append_should_not_fail_on_an_empty_string_literalMFZE7testing5logic2it, .-_D5specs4test12StringTester49append_should_not_fail_on_an_empty_string_literalMFZE7testing5logic2it
.Leh_func_end16:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table16:
	.byte	0x0
	.byte	0x0
.Lexception16:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin16-.Leh_func_begin16
	.long	.Llabel122-.Leh_func_begin16
	.long	0x0
	.uleb128	0
	.long	.Llabel122-.Leh_func_begin16
	.long	.Llabel129-.Llabel122
	.long	.Llabel130-.Leh_func_begin16
	.uleb128	1
	.long	.Llabel129-.Leh_func_begin16
	.long	.Leh_func_end16-.Llabel129
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4


	.text
	.align	16
	.globl	_D5specs4test12StringTester55append_should_throw_an_exception_for_null_string_objectMFZE7testing5logic2it
	.type	_D5specs4test12StringTester55append_should_throw_an_exception_for_null_string_objectMFZE7testing5logic2it,@function
_D5specs4test12StringTester55append_should_throw_an_exception_for_null_string_objectMFZE7testing5logic2it:
.Leh_func_begin17:
.Llabel139:
	pushq	%rbx
	movq	%rdi, %rbx
	movq	%rbx, %rdi
	call	_d_invariant
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	call	*176(%rax)
.Llabel132:
	leaq	_D4core6string6String7__ClassZ, %rdi
	call	_d_allocclass
.Llabel133:
.LBB17_1:	# postinvoke
	movq	$_D4core6string6String6__vtblZ, (%rax)
	movq	$0, 8(%rax)
	movq	_D4core6string6String6__initZ+56, %rcx
	movq	%rcx, 56(%rax)
	movq	_D4core6string6String6__initZ+48, %rcx
	movq	%rcx, 48(%rax)
	movq	_D4core6string6String6__initZ+40, %rcx
	movq	%rcx, 40(%rax)
	movq	_D4core6string6String6__initZ+32, %rcx
	movq	%rcx, 32(%rax)
	movq	_D4core6string6String6__initZ+24, %rcx
	movq	%rcx, 24(%rax)
	movq	_D4core6string6String6__initZ+16, %rcx
	movq	%rcx, 16(%rax)
.Llabel134:
	leaq	._arguments.storage, %rdx
	xorl	%esi, %esi
	movl	$6, %r8d
	leaq	.str59, %r9
	movq	%rax, %rdi
	movq	$0, %rcx
	call	_D4core6string6String5_ctorMFAaYC4core6string6String
.Llabel135:
.LBB17_2:	# postinvoke24
	movq	(%rax), %rcx
	movq	64(%rcx), %rcx
.Llabel136:
	xorl	%esi, %esi
	movq	%rax, %rdi
	call	*%rcx
.Llabel137:
.LBB17_3:	# endtrycatch
	xorl	%eax, %eax
	popq	%rbx
	ret
.LBB17_4:	# landingpad
.Llabel138:
	cmpq	$1, %rdx
	jne	.LBB17_6	# switchdefault
.LBB17_5:	# catch
	movq	24(%rax), %rsi
	movq	16(%rax), %rdi
	movl	$16, %edx
	leaq	.str92, %rcx
	leaq	_D11TypeInfo_Aa6__initZ, %r8
	call	_adEq
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	popq	%rbx
	ret
.LBB17_6:	# switchdefault
	movq	%rax, %rdi
	call	_d_eh_resume_unwind
	.size	_D5specs4test12StringTester55append_should_throw_an_exception_for_null_string_objectMFZE7testing5logic2it, .-_D5specs4test12StringTester55append_should_throw_an_exception_for_null_string_objectMFZE7testing5logic2it
.Leh_func_end17:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table17:
	.byte	0x0
	.byte	0x0
.Lexception17:
	.byte	0xFF
	.byte	0x0
	.uleb128	51
	.byte	0x3
	.uleb128	39
	.long	.Leh_func_begin17-.Leh_func_begin17
	.long	.Llabel132-.Leh_func_begin17
	.long	0x0
	.uleb128	0
	.long	.Llabel132-.Leh_func_begin17
	.long	.Llabel137-.Llabel132
	.long	.Llabel138-.Leh_func_begin17
	.uleb128	1
	.long	.Llabel137-.Leh_func_begin17
	.long	.Leh_func_end17-.Llabel137
	.long	0x0
	.uleb128	0
	.sleb128	1
	.sleb128	0
	.quad	_D9Exception7__ClassZ
	.align	4
